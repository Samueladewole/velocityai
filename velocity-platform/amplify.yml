version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - npm ci
            - echo "Building Velocity.ai Platform with advanced subdomain support"
        build:
          commands:
            - npm run build
            - echo "Build completed successfully"
      artifacts:
        baseDirectory: dist
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
      # Custom headers for security and performance
      customHeaders:
        - pattern: '**/*'
          headers:
            - key: 'Strict-Transport-Security'
              value: 'max-age=31536000; includeSubDomains'
            - key: 'X-Content-Type-Options'
              value: 'nosniff'
            - key: 'X-Frame-Options'
              value: 'DENY'
            - key: 'X-XSS-Protection'
              value: '1; mode=block'
            - key: 'Referrer-Policy'
              value: 'strict-origin-when-cross-origin'
      # URL rewrites for SPA routing (SAFE - won't break existing routes)
      rewrites:
        # Velocity subdomain routing - all routes on velocity.velocityai.com go to the React app
        - source: '/<*>'
          target: '/index.html'
          status: '200'
          condition: 'Host:velocity.velocityai.com'
        # Existing app routing (preserved for main domain)
        - source: '/dashboard'
          target: '/index.html'
          status: '200'
        - source: '/settings'
          target: '/index.html'
          status: '200'
        - source: '/components'
          target: '/index.html'
          status: '200'
        - source: '/reports'
          target: '/index.html'
          status: '200'
        # API routes (backend integration)
        - source: '/api/*'
          target: 'https://api.velocityai.com/<*>'
          status: '200'
        # Fallback for all routes (preserves existing behavior)
        - source: '/<*>'
          target: '/index.html'
          status: '404-200'
  # Backend configuration (if using Amplify for full-stack)
  - backend:
      phases:
        preBuild:
          commands:
            - echo "Setting up backend environment"
        build:
          commands:
            - echo "Backend build completed"