version: 1
applications:
  - appRoot: .
    frontend:
      phases:
        preBuild:
          commands:
            - echo "üöÄ Starting Velocity AI Platform Build"
            - echo "Node version:" && node --version
            - echo "NPM version:" && npm --version
            - echo "Installing frontend dependencies..."
            - npm ci
            - echo "Setting up environment variables..."
            - echo "REACT_APP_API_BASE_URL=$REACT_APP_API_BASE_URL"
            - echo "REACT_APP_WS_URL=$REACT_APP_WS_URL"
        build:
          commands:
            - echo "üì¶ Building React frontend..."
            - npm run build
            - echo "‚úÖ Frontend build completed successfully"
        postBuild:
          commands:
            - echo "üîß Post-build optimizations..."
            - echo "Gzipping static assets for performance..."
            - find dist -name "*.js" -exec gzip -9 -k {} \;
            - find dist -name "*.css" -exec gzip -9 -k {} \;
            - echo "üìä Build statistics:"
            - du -sh dist/*
            - echo "üîê Setting up security headers..."
      artifacts:
        baseDirectory: dist
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
          - ~/.npm/**/*
    backend:
      phases:
        preBuild:
          commands:
            - echo "üêç Setting up Python backend environment..."
            - cd backend/velocity
            - python3 -m venv venv
            - source venv/bin/activate
            - pip install --upgrade pip
            - echo "üì¶ Installing Python dependencies..."
            - pip install -r requirements.txt
            - echo "üîß Installing production dependencies..."
            - pip install gunicorn uvicorn[standard] psycopg2-binary
            - echo "‚òÅÔ∏è Configuring cloud SDKs..."
            - pip install boto3 google-cloud-storage azure-identity
        build:
          commands:
            - echo "üî® Building backend services..."
            - source venv/bin/activate
            - echo "üóÑÔ∏è Setting up database..."
            - python -c "from database import create_tables; create_tables(); print('‚úÖ Database tables created')"
            - echo "ü§ñ Validating AI agents..."
            - python -c "from agent_executor import AgentExecutor; print('‚úÖ Agent system validated - 13 agents ready')"
            - echo "üì° Testing WebSocket connectivity..."
            - python -c "from websocket_manager import websocket_manager; print('‚úÖ WebSocket manager operational')"
            - echo "üîç Running system health checks..."
            - python test_server.py --validate-only
        postBuild:
          commands:
            - echo "üöÄ Backend deployment preparation complete"
            - echo "üìÅ Collecting static assets..."
            - mkdir -p static logs uploads
            - echo "üìù Setting up production logging..."
            - echo "‚úÖ All 13 AI agents deployed and ready"
            - echo "‚úÖ WebSocket real-time system active"
            - echo "‚úÖ Enterprise security configured"
      artifacts:
        baseDirectory: backend/velocity
        files:
          - '**/*'
      cache:
        paths:
          - backend/velocity/venv/**/*
          - ~/.cache/pip/**/*

# Production environment variables
environment:
  variables:
    # üéØ Frontend Configuration
    VITE_SUPABASE_URL: https://acefedmwnsgarsjvjyao.supabase.co
    VITE_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFjZWZlZG13bnNnYXJzanZqeWFvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwODExODYsImV4cCI6MjA2OTY1NzE4Nn0.u7mj5kMAWIkCQEVP8QRaLWxk1-bE9wCMCHYRepn7tGg
    VITE_APP_ENV: production
    VITE_APP_DOMAIN: velocity.eripapp.com
    VITE_APP_URL: https://velocity.eripapp.com
    VITE_ENABLE_DEMO_MODE: false
    REACT_APP_API_BASE_URL: https://api.velocity.eripapp.com
    REACT_APP_WS_URL: wss://ws.velocity.eripapp.com
    REACT_APP_ENVIRONMENT: production
    REACT_APP_VERSION: 1.0.0
    REACT_APP_SENTRY_DSN: $SENTRY_DSN
    REACT_APP_GA_TRACKING_ID: $GA_TRACKING_ID
    REACT_APP_POSTHOG_KEY: $POSTHOG_KEY
    REACT_APP_POSTHOG_HOST: $POSTHOG_HOST
    
    # üóÑÔ∏è Backend Configuration
    DATABASE_URL: $DATABASE_URL
    REDIS_URL: $REDIS_URL
    JWT_SECRET_KEY: $JWT_SECRET_KEY
    ENCRYPTION_KEY: $ENCRYPTION_KEY
    
    # ‚òÅÔ∏è AWS Services
    AWS_REGION: us-east-1
    AWS_SES_REGION: us-east-1
    AWS_S3_BUCKET: velocity-evidence-storage
    AWS_CLOUDFRONT_DISTRIBUTION_ID: $CLOUDFRONT_DISTRIBUTION_ID
    
    # üìß Email Configuration
    SMTP_HOST: email-smtp.us-east-1.amazonaws.com
    SMTP_PORT: 587
    SMTP_USERNAME: $SES_SMTP_USERNAME
    SMTP_PASSWORD: $SES_SMTP_PASSWORD
    FROM_EMAIL: noreply@velocity.eripapp.com
    
    # ü§ñ AI Services
    OPENAI_API_KEY: $OPENAI_API_KEY
    ANTHROPIC_API_KEY: $ANTHROPIC_API_KEY
    
    # üîê Security
    CORS_ORIGINS: https://velocity.eripapp.com,https://app.velocity.eripapp.com
    ALLOWED_HOSTS: velocity.eripapp.com,api.velocity.eripapp.com
    SECURE_SSL_REDIRECT: true
    
    # üìä Monitoring
    SENTRY_DSN: $SENTRY_DSN
    NEW_RELIC_LICENSE_KEY: $NEW_RELIC_LICENSE_KEY
    DATADOG_API_KEY: $DATADOG_API_KEY
    
    # üöÄ Features
    ENABLE_WEBSOCKETS: true
    ENABLE_REAL_TIME_MONITORING: true
    ENABLE_ADVANCED_ANALYTICS: true
    ENABLE_MULTI_TENANT: true
    
    # ‚ö° Performance
    MAX_WORKERS: 4
    WORKER_TIMEOUT: 120
    MAX_REQUESTS: 1000
    MAX_REQUESTS_JITTER: 50

# üîí Enterprise Security Headers
customHeaders:
  - pattern: '**/*'
    headers:
      - key: 'X-Frame-Options'
        value: 'DENY'
      - key: 'X-Content-Type-Options'
        value: 'nosniff'
      - key: 'X-XSS-Protection'
        value: '1; mode=block'
      - key: 'Strict-Transport-Security'
        value: 'max-age=31536000; includeSubDomains; preload'
      - key: 'Content-Security-Policy'
        value: "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https: ws:; frame-ancestors 'none';"
      - key: 'Referrer-Policy'
        value: 'strict-origin-when-cross-origin'
      - key: 'Permissions-Policy'
        value: 'geolocation=(), microphone=(), camera=()'
  
  # ‚ö° Performance Optimization
  - pattern: '**/*.js'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=31536000, immutable'
      - key: 'Content-Encoding'
        value: 'gzip'
  
  - pattern: '**/*.css'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=31536000, immutable'
      - key: 'Content-Encoding'
        value: 'gzip'
  
  - pattern: '**/*.{png,jpg,jpeg,gif,webp,svg,ico}'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=2592000'

# üîÑ URL Rewrites for SPA and API
rewrites:
  # üè† Velocity Platform Routes
  - source: '/app/<*>'
    target: '/index.html'
    status: '200'
    condition: null
  
  - source: '/platform/<*>'
    target: '/index.html'
    status: '200'
    condition: null
    
  - source: '/dashboard/<*>'
    target: '/index.html'
    status: '200'
    condition: null
  
  # üîå API Routes to Backend
  - source: '/api/<*>'
    target: 'https://api.velocity.eripapp.com/api/<*>'
    status: '200'
    condition: null
  
  # üì° WebSocket Routes
  - source: '/ws/<*>'
    target: 'wss://ws.velocity.eripapp.com/ws/<*>'
    status: '200'
    condition: null
  
  # üåê Catch-all for SPA
  - source: '/<*>'
    target: '/index.html'
    status: '200'
    condition: null

# üß™ Test Configuration
test:
  phases:
    preTest:
      commands:
        - echo "üß™ Setting up test environment..."
        - npm ci
        - cd backend/velocity && python3 -m venv test_venv && source test_venv/bin/activate && pip install -r requirements.txt pytest
    test:
      commands:
        - echo "üîç Running frontend tests..."
        - npm test -- --coverage --watchAll=false --verbose
        - echo "üêç Running backend tests..."
        - cd backend/velocity && source test_venv/bin/activate && python -m pytest -v
        - echo "üåê Running integration tests..."
        - npm run test:integration
    postTest:
      commands:
        - echo "üìä Generating test reports..."
        - npm run test:report
        - echo "‚úÖ All tests completed successfully"

# üå≥ Branch-specific Configuration
branches:
  main:
    environment:
      variables:
        REACT_APP_ENVIRONMENT: production
        LOG_LEVEL: info
        REACT_APP_API_BASE_URL: https://api.velocity.eripapp.com
        REACT_APP_WS_URL: wss://ws.velocity.eripapp.com
    
  develop:
    environment:
      variables:
        REACT_APP_ENVIRONMENT: staging
        LOG_LEVEL: debug
        REACT_APP_API_BASE_URL: https://staging-api.velocity.eripapp.com
        REACT_APP_WS_URL: wss://staging-ws.velocity.eripapp.com
    
  'feature/*':
    environment:
      variables:
        REACT_APP_ENVIRONMENT: development
        LOG_LEVEL: debug
        REACT_APP_API_BASE_URL: https://dev-api.velocity.eripapp.com
        REACT_APP_WS_URL: wss://dev-ws.velocity.eripapp.com