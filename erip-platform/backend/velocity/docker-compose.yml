version: '3.8'

services:
  # Velocity API Server
  velocity-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://velocity:velocity_password@postgres:5432/velocity_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:5178,https://velocity.eripapp.com
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=velocity_db
      - POSTGRES_USER=velocity
      - POSTGRES_PASSWORD=velocity_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Celery Worker for background tasks
  celery-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://velocity:velocity_password@postgres:5432/velocity_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: celery -A main.celery worker --loglevel=info

  # Celery Beat for scheduling
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://velocity:velocity_password@postgres:5432/velocity_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: celery -A main.celery beat --loglevel=info

volumes:
  postgres_data:
  redis_data: